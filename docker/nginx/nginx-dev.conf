# Configuração do Nginx para desenvolvimento
# 
# Esta configuração é otimizada para desenvolvimento local
# com foco em facilidade de debug e hot-reload.

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Configurações de log
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log debug;

    # Configurações de performance
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    client_max_body_size 64M;

    # Configuração de gzip
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Upstream para a aplicação PHP
    upstream app {
        server app:80;
    }

    # Servidor HTTP para desenvolvimento
    server {
        listen 80;
        server_name localhost;

        # Logs específicos para desenvolvimento
        access_log /var/log/nginx/dev-access.log main;
        error_log /var/log/nginx/dev-error.log debug;

        # Proxy para a aplicação Apache
        location / {
            proxy_pass http://app;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # Negar acesso a arquivos sensíveis
        location ~ /\. {
            deny all;
        }

        location ~ /(storage|bootstrap/cache) {
            deny all;
        }

        # Cache para arquivos estáticos (desabilitado em desenvolvimento)
        location ~* \.(jpg|jpeg|png|gif|ico|css|js)$ {
            expires 1h;
            add_header Cache-Control "public";
        }

        # Health check
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }

    # Servidor HTTPS para desenvolvimento (opcional)
    server {
        listen 443 ssl;
        server_name localhost;

        # Configurações SSL
        ssl_certificate /etc/nginx/ssl/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/key.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;

        # Logs específicos para desenvolvimento
        access_log /var/log/nginx/dev-ssl-access.log main;
        error_log /var/log/nginx/dev-ssl-error.log debug;

        # Proxy para a aplicação Apache
        location / {
            proxy_pass http://app;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # Negar acesso a arquivos sensíveis
        location ~ /\. {
            deny all;
        }

        location ~ /(storage|bootstrap/cache) {
            deny all;
        }

        # Cache para arquivos estáticos (desabilitado em desenvolvimento)
        location ~* \.(jpg|jpeg|png|gif|ico|css|js)$ {
            expires 1h;
            add_header Cache-Control "public";
        }

        # Health check
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }
}
